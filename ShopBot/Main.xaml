<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="592,6290" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Activities.System.Collections.Filters</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="498.6666666666667,6225.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="client1List" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="client2List" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="client3List" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)()]" Name="client1OutOfStock" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)()]" Name="client2OutOfStock" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)()]" Name="client3OutOfStock" />
      <Variable x:TypeArguments="x:String" Name="firstStoreName" />
      <Variable x:TypeArguments="x:String" Name="secondStoreName" />
      <Variable x:TypeArguments="x:String" Name="thirdStoreName" />
      <Variable x:TypeArguments="sd:DataTable" Name="firstStore_dt" />
      <Variable x:TypeArguments="sd:DataTable" Name="secondStore_dt" />
      <Variable x:TypeArguments="sd:DataTable" Name="thirdStore_dt" />
      <Variable x:TypeArguments="x:Double" Name="client1Subtotal" />
      <Variable x:TypeArguments="x:Double" Name="client2Subtotal" />
      <Variable x:TypeArguments="x:Double" Name="client3Subtotal" />
      <Variable x:TypeArguments="sd:DataTable" Name="client1RecExpense_dt" />
      <Variable x:TypeArguments="sd:DataTable" Name="client2RecExpense_dt" />
      <Variable x:TypeArguments="sd:DataTable" Name="client3RecExpense_dt" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)()]" Name="storesToVisit" />
      <Variable x:TypeArguments="x:String" Name="client1Name" />
      <Variable x:TypeArguments="x:String" Name="client2Name" />
      <Variable x:TypeArguments="x:String" Name="client3Name" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="Welcome to RoSa, the ShopBot." />
    <ui:InputDialog Options="{x:Null}" DisplayName="Input First Client" sap:VirtualizedContainerService.HintSize="436.6666666666667,54" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Choose who to shop for first:" OptionsString="Beth S.;Chris K.;Mary M." Title="First Client">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[client1Name]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Choose 2nd, not match first" Condition="[client1Name.Equals(client2Name)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="436.6666666666667,612.6666666666666" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,411.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" DisplayName="Input Second Client" sap:VirtualizedContainerService.HintSize="338,300.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Choose who to shop for second:" OptionsString="Beth S.;Chris K.;Mary M." Title="Second Client">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[client2Name]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Choose 3rd, not match fist two." Condition="[client1Name.Equals(client3Name) Or client2Name.Equals(client3Name)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="436.6666666666667,99.33333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,411.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" DisplayName="Input Second Client" sap:VirtualizedContainerService.HintSize="338,300.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Choose who to shop for third:" OptionsString="Beth S.;Chris K.;Mary M." Title="Third Client">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[client3Name]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;Client shopping order is &quot; + client1Name +&quot;, then &quot; + client2Name + &quot;, and finally &quot; + client3Name + &quot;.&quot;]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Compiling client shopping lists." />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Makes a list of each clients items" DisplayName="MakeClientTables.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="MakeClientLists.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_client1List">[client1List]</OutArgument>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_client2List">[client2List]</OutArgument>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_client3List">[client3List]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client1Name">[client1Name]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client2Name">[client2Name]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client3Name">[client3Name]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input First Store" sap:VirtualizedContainerService.HintSize="436.6666666666667,300.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Choose first store to vist." OptionsString="Pet;Bath;Grocery" Title="First Store">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[firstStoreName]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Makes sure 2nd store not same as 1st" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="436.6666666666667,612.6666666666666" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,411.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" DisplayName="Input Second Store" sap:VirtualizedContainerService.HintSize="338,300.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="Choose second store to vist." OptionsString="Pet;Bath;Grocery" Title="Second Store">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[secondStoreName]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="firstStoreName.Equals(secondStoreName)" />
      </ui:InterruptibleDoWhile.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Makes sure 3rd store is different" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="436.6666666666667,612.6666666666666" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_4">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,411.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" DisplayName="Input Second Store" sap:VirtualizedContainerService.HintSize="338,300.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Choose third store to vist." OptionsString="Pet;Bath;Grocery" Title="Third Store">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[thirdStoreName]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="firstStoreName.Equals(thirdStoreName) Or secondStoreName.Equals(thirdStoreName)" />
      </ui:InterruptibleDoWhile.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[&quot;Visiting stores in the order of:&quot; + vbcrlf + firstStoreName + vbcrlf + secondStoreName + vbcrlf + thirdStoreName]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Collecting vendor inventories." />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Makes all 3 vendor tables" DisplayName="MakeVendorTables.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="MakeVendorTables.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_firstVendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="firstStore_dt" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_secondVendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="secondStore_dt" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_thirdVendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="thirdStore_dt" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_firstStoreName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="firstStoreName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_secondStoreName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="secondStoreName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_thirdStoreName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="thirdStoreName" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckTable.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="CheckTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dataTable">
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="firstStore_dt" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_tableName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="firstStoreName" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckTable.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="CheckTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dataTable">
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="secondStore_dt" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_tableName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="secondStoreName" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckTable.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="CheckTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dataTable">
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="thirdStore_dt" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_tableName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="thirdStoreName" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="Preparing Expense reports for entries" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Makes tables for the recorded values of the reports&#xA;" DisplayName="MakeExpenseTables.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,160.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="MakeExpenseTables.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_client1RecExpense_dt">[client1RecExpense_dt]</OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_client2RecExpense_dt">[client2RecExpense_dt]</OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_client3RecExpense_dt">[client3RecExpense_dt]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client1Name">[client1Name]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client2Name">[client2Name]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client3Name">[client3Name]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="Preparing for shopping trip." />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="All visit store now" DisplayName="VisitStore.xaml - First Store" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="VisitStore.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_storeName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="firstStoreName" />
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_storesToVisit">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="storesToVisit" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_vendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="firstStore_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client1Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client1Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client1RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client1RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client2Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client2Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client2RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client2RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client3Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client3Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client3RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client3RecExpense_dt" />
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="All visit store now" DisplayName="VisitStore.xaml - Second Store" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="VisitStore.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_storeName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="secondStoreName" />
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_storesToVisit">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="storesToVisit" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_vendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="secondStore_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client1Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client1Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client1RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client1RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client2Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client2Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client2RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client2RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client3Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client3Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client3RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client3RecExpense_dt" />
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="All visit store now" DisplayName="VisitStore.xaml - Third Store" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="VisitStore.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_storeName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="thirdStoreName" />
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_storesToVisit">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="storesToVisit" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_vendor_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="thirdStore_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client1OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client1OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client1Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client1Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client1RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client1RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client2OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client2OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client2Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client2Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client2RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client2RecExpense_dt" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3List">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3List" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_client3OutofStock">
          <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="client3OutOfStock" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Double" x:Key="io_client3Subtotal">
          <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="client3Subtotal" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_client3RecExpense_dt">
          <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="client3RecExpense_dt" />
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="Planning where to go." />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Writes out stores to visit to console" DisplayName="CheckList.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="CheckList.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_nameString">Stores to visit</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_checkList">[storesToVisit]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="writes to ShopsToVisit.txt" DisplayName="ListWriteToFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="436.6666666666667,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="ListWriteToFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_writeList">
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="storesToVisit" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_nameString">
          <Literal x:TypeArguments="x:String">Stores to Visit</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client1Name">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="client1Name" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client2Name">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="client2Name" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_client3Name">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="client3Name" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="436.6666666666667,92" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="Writing Expense Reports" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteExpenseReport.xaml  client1" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="WriteExpenseReport.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_recExpense_dt">
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="client1RecExpense_dt" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_clientName">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="client1Name" />
        </InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientList">
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="client1List" />
        </InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientOut">
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="client1OutOfStock" />
        </InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_subtotal">
          <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="client1Subtotal" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteExpenseReport.xaml  client2" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="WriteExpenseReport.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_recExpense_dt">[client2RecExpense_dt]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_clientName">[client2Name]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientList">[client2List]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientOut">[client2OutOfStock]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_subtotal">[client2Subtotal]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteExpenseReport.xaml  client3" sap:VirtualizedContainerService.HintSize="436.6666666666667,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="WriteExpenseReport.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_recExpense_dt">[client3RecExpense_dt]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_clientName">[client3Name]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientList">[client3List]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_clientOut">[client3OutOfStock]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_subtotal">[client3Subtotal]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>